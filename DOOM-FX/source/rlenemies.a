;**********************************************************************
;*                                                                    *
;*                  P R O J E C T :   REALITY_ENGINE                  *
;*                                                                    *
;*                     ENEMIES HANDLING MODULE 1                      *
;*                                                                    *
;*                        ENEMIES TARGETTING 1                        *
;*                                                                    *
;**********************************************************************

	include	rage.i
	include	rle.i
	include	gsumac.i
	include	rlobjects.i
	include	rlenemies.i


	SECTION	ENGINE_GSUCODE
	cpu	sfx


rNULL			equ	r3		; $0000
rrloSector		equ	r4		; Offset to rloSector
rrloHealth		equ	r5		; Offset to rloHealth
rrloTObj		equ	r6		; Offset to rloTObj
rSINGLEBITARRAY		equ	r7		; Base of SingleBitArray
rREJECT			equ	r8		; Base of REJECT
rNUMSECTORS		equ	r9		; Number of SECTORS
;
rEnemyTargets		equ	r10		; Pointer to Enemy Targetting List
rObjTObj		equ	r11		; Pointer to RLObject.TObj
rObj			equ	r12		; Pointer to RLObject
rTObj			equ	r13		; Pointer to Target RLObject


;
;	* * * * * * *       ENEMIES TARGETTING       * * * * * * *
;
	align	16,(_RLET10000-_RLEnemiesTargetAlign)&$0f
;
;	>>>   FINISHED ENEMIES TARGETTING   <<<
;
_RLET10000
	move	r0,#<_RLEnemiesTarget2		; HANDLE ENEMY TARGETTING 2
	move	r8,#^_RLEnemiesTarget2
	ife	PROFILE
	ljmp	r8
	endif
	ifn	PROFILE
	stop
	endif
	nop

;
;	>>>   START ENEMIES TARGETTING   <<<
;
_RLEnemiesTarget
	move	r0,#<(EMBSP+2)				; Bank of EM Data
	ldb	(r0)
	romb
	move	rEnemyTargets,#<(_RLEnemyTargets-2)	; Pointer to Enemy TargetList
	move	rREJECT,(<EMREJECT)			; Get Base of REJECT
	move	rNUMSECTORS,(<EMNUMSECTORS)		; Get #SECTORS
	move	rSINGLEBITARRAY,#<SingleBitArray	; Get Base of SINGLEBITARRAY
	move	rrloTObj,#rloTObj			; Offset to TObj
	move	rrloHealth,#rloHealth			; Offset to Target's Health
	move	rrloSector,#rloSector			; Offset to Target's Sector
	move	rNULL,#0				; $0000

	CACHEB	_RLEnemiesTarget
_RLEnemiesTargetAlign
;
;	>>>   PROCESS NEXT ENEMY   <<<
;
_RLET2000
	inc	rEnemyTargets			; Move to Next Enemy
	inc	rEnemyTargets
	to	rObj				; Get Next Enemy
	ldw	(rEnemyTargets)
	from	rObj				; Get TargetObject
	to	rObjTObj
	add	rrloTObj
	bmi	_RLET10000			; No More Enemies!
	inc	rEnemyTargets			; Move to Next Enemy
;
;	>>>   ACQUIRE CURRENT TARGET / ACQUIRE PLAYER   <<<
;
	to	rTObj				; Get Target RLObject
	ldw	(rObjTObj)
	dec	rTObj				; Any Target?
	bmi	_RLET2400			; No
;
;	>>>   ACQUIRE CURRENT TARGET   <<<
;
	from	rNULL				; Assume Sight Blocked
	sbk
	bra	_RLET2500
	inc	rTObj
;
;	>>>   ACQUIRE PLAYER   <<<
;
_RLET2400
	ife	useMULTIPLAYER
	move	rTObj,#<PlayerObject		; No Target -- Acquire the Player!
	endif
	ifn	useMULTIPLAYER
	move	rTObj,(<MPEnemyTarget)		; No Target -- Acquire the Player!
	endif
;
;	>>>   IS LINE-OF-SIGHT POSSIBLE?   <<<
;
_RLET2500
	from	rObj				; Get Enemy Sector
;	to	r0
	add	rrloSector
;	to	r0
	ldb	(r0)
	from	rrloSector			; Get Target Sector
	to	r1
	add	rTObj
	to	r1
	ldb	(r1)
;	with	r0				; (EnemySector*NumSectors)+TargetSector
	umult	rNUMSECTORS
	with	r1
	add	r0
	from	r1				; Get Byte Offset
;	to	r0
	lsr
;	with	r0
	lsr
;	with	r0
	lsr
;	from	r0				; Get REJECT Byte
	to	r14
	add	rREJECT
	with	r1
	and	#7
	from	rSINGLEBITARRAY
;	to	r0
	add	r1
	to	r1
	ldb	(r0)
	getb
;	with	r0				; CAN ENEMY SEE TARGET?
	and	r1
	bne	_RLET3000			; NO!
	inc	rEnemyTargets			; Move to Next Enemy
;
;	>>>   TARGET STILL ALIVE?   <<<
;
	from	rrloHealth			; Get Target's Health
;	to	r0
	add	rTObj
;	to	r0
	ldw	(r0)
	dec	r0				; Any Health?
	bmi	_RLET3000			; NO!
;
;	>>>   SAVE TARGET   <<<
;
	from	rTObj				; YES!
	bra	_RLET2000+2
	stw	(rObjTObj)

;
;	>>>   VERY FAR AWAY FROM TARGET?   <<<
;
_RLET3000
	move	r0,#(rloX+2)			; Get |DeltaX|
;	from	r0
	to	r1
	add	rTObj
;	with	r0
	add	rObj
;	to	r0
	ldw	(r0)
	to	r1
	ldw	(r1)
;	with	r0
	sub	r1
	bpl	_RLET3200
	nop
;	with	r0
	not
	inc	r0
_RLET3200
;	with	r0				; >= 1024 Units?
	hib
;	with	r0
	sub	#4
	bpl	_RLET3800			; YES!  TOO FAR TO SEE -- SLEEP!
	nop
	move	r0,#(rloY+2)			; Get |DeltaY|
;	from	r0
	to	r1
	add	rTObj
;	with	r0
	add	rObj
;	to	r0
	ldw	(r0)
	to	r1
	ldw	(r1)
;	with	r0
	sub	r1
	bpl	_RLET3400
	nop
;	with	r0
	not
	inc	r0
_RLET3400
;	with	r0				; >= 1024 Units?
	hib
;	with	r0
	sub	#4
	bmi	_RLET4000-1			; No, Keep Moving!
;
;	>>>   TARGET VERY FAR AWAY -- SLEEP   <<<
;
_RLET3800
	move	r0,#^_MObjData			; MObjData Bank
	romb
	move	r1,#rloMData			; Get MObjData
	with	r1
	add	rObj
;	to	r0
	ldw	(r1)
;	from	r0				; Move to SleepState
	to	r14
	add	#rlmodSleepS
	dec	r1				; Move to State
	dec	r1
	getb					; Get SleepState
	inc	r14
	getbh
;	from	r0
	stw	(r1)
	move	r0,#<(EMBSP+2)			; Bank of EM Data
	ldb	(r0)
	romb
_RLET4000
	iwt	r15,#<_RLET2000+2
	nop

	CACHEE	_RLEnemiesTarget
